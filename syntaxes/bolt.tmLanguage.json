{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Bolt",
	"patterns": [
		{
			"include": "#declarations"
		}
	],
	"repository": {
		"declarations": {
			"patterns": [
				{
					"include": "#path-declaration"
				},
				{
					"include": "#function-declaration"
				},
				{
					"include": "#type-declaration"
				}
			]
		},
		"expr": {
			"patterns": [
				{
					"include": "#function-call"
				},
				{
					"include": "#regexp"
				},
				{
					"include": "#string-double"
				},
				{
					"include": "#string-single"
				},
				{
					"include": "#return"
				},
				{
					"include": "#reserved-identifier"
				},
				{
					"include": "#boolean-constant"
				},
				{
					"include": "#numeric-constant"
				},
				{
					"include": "#variable-identifier"
				}
			]
		},

		"function-declaration": {
			"name": "meta.function.bolt",
			"begin": "(function\\s)?\\s*([a-zA-Z_$]\\w*)\\s*(\\()((?:[a-zA-Z_$]\\w*)(?:,\\s*(?:[a-zA-Z_$]\\w*))*)?(\\))\\s*{",
			"beginCaptures": {
				"1": {
					"name": "storage.type.function.bolt"
				},
				"2": {
					"name": "entity.name.function.bolt"
				},
				"3": {
					"name": "punctuation.definition.parameters.begin.bolt"
				},
				"4": {
					"patterns": [{
						"name": "variable.parameter.function.bolt",
						"match": "\\b(?:[a-zA-Z_$]\\w*)"
					}]
				},
				"5": {
					"name": "punctuation.definition.parameters.end.bolt"
				}
			},
			"end": "}",
			"patterns": [
				{
					"include": "#function-declaration"
				},
				{
					"include": "#expr"
				}
			]
		},
		"path-declaration": {
			"name": "meta.path.bolt",
			"begin": "(path\\s)?\\s*(/\\S*)+\\s*(?:\\s+(is)\\s+(.+)\\s*)?{",
			"beginCaptures": {
				"1": {
					"name": "storage.type.path.bolt"
				},
				"2": {
					"name": "string.quoted.single.bolt",
					"patterns": [{
						"match": "(?<=/)({)([a-zA-Z_$]\\w*)(})",
						"captures": {
							"1": {
								"name": "storage.parameter.path.begin.bolt"
							},
							"2": {
								"name": "variable.parameter.path.bolt"
							},
							"3": {
								"name": "storage.parameter.path.end.bolt"
							}
						}
					}]
				},
				"3": {
					"name": "keyword.control.bolt"
				},
				"4": {
					"patterns": [{
						"include": "#types"
					}]
				}
			},
			"end": "}",
			"patterns": [
				{
					"include": "#path-declaration"
				},
				{
					"include": "#function-declaration"
				}
			]
		},
		"type-declaration": {
			"name": "meta.type.bolt",
			"begin": "(type)\\s+(\\S+)\\s*(?:\\s+(extends)\\s+(.+)\\s*)?{",
			"beginCaptures": {
				"1": {
					"name": "storage.type.type.bolt"
				},
				"2": {
					"name": "entity.name.type.bolt"
				},
				"3": {
					"name": "keyword.control.bolt"
				},
				"4": {
					"patterns": [{
						"include": "#types"
					}]
				}
			},
			"end": "}",
			"patterns": [
				{
					"name": "meta.properties.bolt",
					"match": "([a-zA-Z_$]\\w*):\\s*(.+)",
					"captures": {
						"1": {
							"name": "variable.property.bolt"
						},
						"2": {
							"patterns": [{
								"include": "#types"
							}]
						}
					}
				},
				{
					"include": "#function-declaration"
				}
			]
		},
		"types": {
			"patterns": [
				{
					"name": "entity.name.type.bolt",
					"match": "\\w+"
				},
				{
					"match": "(\\w+)<((?:\\w+)(?:,\\s\\w+)*)>",
					"captures": {
						"1": {
							"name": "entity.name.type.bolt"
						},
						"2": {
							"patterns": [{
								"include": "#types"
							}]
						}
					}
				}
			]
		},

		"function-call": {
			"name": "meta.function.bolt",
			"match": "([a-zA-Z_$]\\w*)\\s*(\\()(.*)?(\\))",
			"captures": {
				"1": {
					"name": "entity.name.function.bolt"
				},
				"2": {
					"name": "punctuation.definition.parameters.begin.bolt"
				},
				"3": {
					"patterns": [
						{
							"include": "#expr"
						}
					]
				},
				"4": {
					"name": "punctuation.definition.parameters.end.bolt"
				}
			}
		},
		"string-double": {
			"name": "string.quoted.double.bolt",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.bolt",
					"match": "\\\\."
				}
			]
		},
		"string-single": {
			"name": "string.quoted.single.bolt",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.bolt",
					"match": "\\\\."
				}
			]
		},
		"regexp": {
			"name": "string.regexp.bolt",
			"begin": "/",
			"end": "/"
		},
		"return": {
			"name": "keyword.control.bolt",
			"match": "\\b(return)\\b"
		},
		"reserved-identifier": {
			"name": "storage.reserved.bolt",
			"match": "(root|auth|now|$location|data|newData|this)"
		},
		"variable-identifier": {
			"name": "variable.parameter.bolt",
			"match": "[a-zA-Z_$]\\w*"
		},
		"boolean-constant": {
			"name": "constant.language.bolt",
			"match": "(true|false)"
		},
		"numeric-constant": {
			"name": "constant.numeric.bolt",
			"match": "\\d"
		}
	},
	"scopeName": "source.bolt"
}